// Mocks generated by Mockito 5.4.2 from annotations
// in weather_app/test/modules/search/infra/repositories/search_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/modules/search/domain/entities/weather_description.dart'
    as _i5;
import 'package:weather_app/modules/search/infra/datasources/search_datasource.dart'
    as _i2;
import 'package:weather_app/modules/search/infra/models/weather_data_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SearchDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchDataSource extends _i1.Mock implements _i2.SearchDataSource {
  @override
  _i3.Future<_i4.WeatherDataModel?> getWeatherData({
    required String? lat,
    required String? long,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeatherData,
          [],
          {
            #lat: lat,
            #long: long,
          },
        ),
        returnValue: _i3.Future<_i4.WeatherDataModel?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.WeatherDataModel?>.value(),
      ) as _i3.Future<_i4.WeatherDataModel?>);
}

/// A class which mocks [WeatherDataModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherDataModel extends _i1.Mock implements _i4.WeatherDataModel {
  @override
  int get dateTime => (super.noSuchMethod(
        Invocation.getter(#dateTime),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  int get sunrise => (super.noSuchMethod(
        Invocation.getter(#sunrise),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  int get sunset => (super.noSuchMethod(
        Invocation.getter(#sunset),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  double get temp => (super.noSuchMethod(
        Invocation.getter(#temp),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  double get feelsLike => (super.noSuchMethod(
        Invocation.getter(#feelsLike),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  int get pressure => (super.noSuchMethod(
        Invocation.getter(#pressure),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  int get humidity => (super.noSuchMethod(
        Invocation.getter(#humidity),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  double get windSpeed => (super.noSuchMethod(
        Invocation.getter(#windSpeed),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  List<_i5.WeatherDescription> get weatherDescriptionList =>
      (super.noSuchMethod(
        Invocation.getter(#weatherDescriptionList),
        returnValue: <_i5.WeatherDescription>[],
        returnValueForMissingStub: <_i5.WeatherDescription>[],
      ) as List<_i5.WeatherDescription>);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
}
